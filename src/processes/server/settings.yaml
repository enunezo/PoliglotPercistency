
vars:
    httpPort: 8000
    dbUrl: 'mongodb://demo:demo@ds119350.mlab.com:19350/demo-negrita'
    dbName: 'demo-negrita'
    neo4jUrl: 'https://hobby-gpeommhdkkbegbkeojkpifal.dbs.graphenedb.com:24780/db/data/'
    neo4jUser: 'demonegrita'
    neo4jPassword: 'b.pvekV9Ks6pdI.iL5MaG7icFNEgIma'

httpServers:
    -   name: 'server'
        ports:
            http: '$httpPort'
        routers:

            -   name: 'webapps'
                description: 'Webapps Router'
                path: '/'
                routes:

                    # Demo service
                    -   method: 'GET'
                        path: '/'
                        pipeline:
                            -   staticsPath: '$demo-webapp'

            -   name: 'api'
                description: 'API Router'
                path: '/api'
                routes:

                    # Demo service
                    -   method: 'GET'
                        path: '/demo'
                        pipeline:
                            -   handler: '$demo-handler'

                    # Get Speakers
                    -   method: 'GET'
                        path: '/speakers'
                        pipeline:
                            -   handler: '$handlers/modelMongoTransaction'
                                params:
                                    db: '$db'
                                    model: '$models/Speaker'
                                    transaction: 'findAll'
                                    
                    # Speakers
                    -   method: 'POST'
                        path: '/speakers'
                        pipeline:
                            -   handler: '$handlers/modelMongoTransaction'
                                params:
                                    db: '$db'
                                    model: '$models/Speaker'
                                    transaction: 'register'
                                    transactionParams:
                                        -   '&body'
                    
                    # Get Conferences
                    -   method: 'GET'
                        path: '/conferences'
                        pipeline:
                            -   handler: '$handlers/modelMongoTransaction'
                                params:
                                    db: '$db'
                                    model: '$models/Conference'
                                    transaction: 'findAll'
                                    
                    # Conferences
                    -   method: 'POST'
                        path: '/conferences'
                        pipeline:
                            -   handler: '$handlers/modelMongoTransaction'
                                params:
                                    db: '$db'
                                    model: '$models/Conference'
                                    transaction: 'register'
                                    transactionParams:
                                        -   '&body'

                    # Get Bus Stops
                    -   method: 'GET'
                        path: '/busStop'
                        pipeline:
                            -   handler: '$handlers/modelMongoTransaction'
                                params:
                                    db: '$db'
                                    model: '$models/BusStop'
                                    transaction: 'findAll'

                    # Add bus line to bus stop
                    -   method: 'PUT'
                        path: '/busStop/:busStopId/busLine/:busLineId'
                        pipeline:
                            -   handler: '$handlers/modelMongoTransaction'
                                params:
                                    db: '$db'
                                    model: '$models/BusStop'
                                    transaction: 'addBusLine'
                                    transactionParams:
                                        -   '&params.busStopId'
                                        -   '&params.busLineId'
                    # Bus Stops
                    -   method: 'POST'
                        path: '/busStop'
                        pipeline:
                            -   handler: '$handlers/modelMongoTransaction'
                                params:
                                    db: '$db'
                                    model: '$models/BusStop'
                                    transaction: 'registerIncludingNeo4j'
                                    transactionParams:
                                        -   '&body'
                                        -   '$neo4jSession'

                    # Get Bus Lines
                    -   method: 'GET'
                        path: '/busLine'
                        pipeline:
                            -   handler: '$handlers/modelMongoTransaction'
                                params:
                                    db: '$db'
                                    model: '$models/BusLine'
                                    transaction: 'findAll'
                    #  Como hago un servicio que me devuelva todas las lineas de Bus por Paradero? <----- PREGUNTA

                                    
                    #  Como voy agregando las paradas de autobus? <----- PREGUNTA
                    # Bus Lines
                    -   method: 'POST'
                        path: '/busLine'
                        pipeline:
                            -   handler: '$handlers/modelMongoTransaction'
                                params:
                                    db: '$db'
                                    model: '$models/BusLine'
                                    transaction: 'register'
                                    transactionParams:
                                        -   '&body'